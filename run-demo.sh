#!/bin/bash\n\n# ByteBuffer HFT Demo Runner Script\n# Optimized for ultra-low latency performance\n\nset -e\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nBLUE='\\033[0;34m'\nNC='\\033[0m' # No Color\n\necho -e \"${BLUE}========================================${NC}\"\necho -e \"${BLUE}ByteBuffer HFT Demo Runner${NC}\"\necho -e \"${BLUE}========================================${NC}\"\n\n# Check Java version\nJAVA_VERSION=$(java -version 2>&1 | head -n 1 | cut -d'\"' -f2 | cut -d'.' -f1)\nif [ \"$JAVA_VERSION\" -lt 17 ]; then\n    echo -e \"${RED}Error: Java 17 or higher is required. Current version: $JAVA_VERSION${NC}\"\n    exit 1\nfi\n\necho -e \"${GREEN}âœ“ Java version check passed${NC}\"\n\n# Set demo type from command line argument\nDEMO_TYPE=${1:-all}\n\n# Ultra-low latency JVM arguments\nJVM_ARGS=(\n    # Memory settings optimized for low latency\n    \"-Xmx2g\"\n    \"-Xms2g\"\n    \"-XX:NewRatio=1\"  # Equal young/old generation\n    \n    # GC settings for minimal pause times\n    \"-XX:+UseG1GC\"\n    \"-XX:MaxGCPauseMillis=1\"  # Target 1ms max pause\n    \"-XX:G1HeapRegionSize=16m\"\n    \"-XX:+UnlockExperimentalVMOptions\"\n    \"-XX:+UseG1NewSizePercent=50\"\n    \n    # JIT compiler optimizations\n    \"-XX:+UnlockDiagnosticVMOptions\"\n    \"-XX:+TraceClassLoading\"\n    \"-XX:+PrintGCDetails\"\n    \"-XX:+PrintGCTimeStamps\"\n    \"-XX:+UseStringDeduplication\"\n    \n    # Performance optimizations\n    \"-server\"\n    \"-XX:+AggressiveOpts\"\n    \"-XX:+UseBiasedLocking\"\n    \"-XX:+OptimizeStringConcat\"\n    \"-XX:+UseFastAccessorMethods\"\n    \n    # Off-heap optimizations\n    \"-XX:+UseCompressedOops\"\n    \"-XX:+UseCompressedClassPointers\"\n    \"-XX:MaxDirectMemorySize=1g\"\n    \n    # Platform specific optimizations\n    \"-Djava.awt.headless=true\"\n    \"-Dfile.encoding=UTF-8\"\n    \"-Djava.net.preferIPv4Stack=true\"\n    \n    # Security manager bypass for performance\n    \"-Djava.security.manager=default\"\n    \"-Djava.security.policy=all.policy\"\n)\n\n# Check if JAR exists, build if necessary\nJAR_FILE=\"target/bytebuffer-hft-demo-1.0.0.jar\"\nif [ ! -f \"$JAR_FILE\" ]; then\n    echo -e \"${YELLOW}Building JAR file...${NC}\"\n    mvn clean package -DskipTests -q\nfi\n\n# Create logs directory\nmkdir -p logs\n\n# Print configuration\necho -e \"${BLUE}Configuration:${NC}\"\necho -e \"  Demo Type: $DEMO_TYPE\"\necho -e \"  Heap Size: 2GB\"\necho -e \"  GC: G1 with 1ms max pause target\"\necho -e \"  Direct Memory: 1GB\"\necho -e \"  JIT: Aggressive optimizations enabled\"\n\n# Build the full command\nFULL_COMMAND=\"java\"\nfor arg in \"${JVM_ARGS[@]}\"; do\n    FULL_COMMAND=\"$FULL_COMMAND $arg\"\ndone\nFULL_COMMAND=\"$FULL_COMMAND -jar $JAR_FILE $DEMO_TYPE\"\n\necho -e \"${BLUE}Starting ByteBuffer HFT Demo...${NC}\"\necho -e \"${YELLOW}Note: This demo showcases ultra-low latency techniques${NC}\"\necho \"\"\n\n# Execute the demo\nexec $FULL_COMMAND